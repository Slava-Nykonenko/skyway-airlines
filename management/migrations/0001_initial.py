# Generated by Django 5.2.6 on 2025-09-16 19:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Airport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "iata",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="IATA code"
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Name")),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("timezone", models.CharField(max_length=50)),
                ("latitude", models.DecimalField(decimal_places=5, max_digits=8)),
                ("longitude", models.DecimalField(decimal_places=5, max_digits=8)),
            ],
            options={
                "ordering": ["city"],
            },
        ),
        migrations.CreateModel(
            name="Plane",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=100)),
                ("registration", models.CharField(max_length=10, unique=True)),
                ("capacity", models.IntegerField()),
                ("last_maintenance", models.DateField()),
                ("hours_to_maintenance", models.IntegerField()),
                ("total_hours", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=13, null=True, unique=True),
                ),
                (
                    "licence_number",
                    models.CharField(blank=True, max_length=8, null=True, unique=True),
                ),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("pilot", "Pilot"),
                            ("co-pilot", "Co-Pilot"),
                            ("flight attendant", "Flight Attendant"),
                            ("engineer", "Engineer"),
                            ("ground crew", "Ground Crew"),
                            ("dispatcher", "Dispatcher"),
                            ("maintenance tech", "Maintenance Tech"),
                            ("cabin crew", "Cabin Crew"),
                        ],
                        max_length=20,
                    ),
                ),
                ("total_hours", models.IntegerField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "allowed_airports",
                    models.ManyToManyField(
                        related_name="staff", to="management.airport"
                    ),
                ),
                (
                    "allowed_planes",
                    models.ManyToManyField(related_name="staff", to="management.plane"),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Flight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("flight_number", models.CharField(max_length=10, unique=True)),
                ("takeoff", models.DateTimeField()),
                ("landing", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("cancelled", "Cancelled"),
                            ("delayed", "Delayed"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "departure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="departing_flights",
                        to="management.airport",
                    ),
                ),
                (
                    "destination",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="arriving_flights",
                        to="management.airport",
                    ),
                ),
                (
                    "staff",
                    models.ManyToManyField(
                        related_name="flight", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "plane",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="management.plane",
                    ),
                ),
            ],
        ),
    ]
